/**
 * Cupertino Pane 1.5.0
 * Cupertino Panes is multi-functional modals, cards & panes with touch technologies.
 * https://panejs.com
 *
 * Copyright 2019-2025 Roman Antonov (roman-rr)
 *
 * Released under the MIT License
 *
 * Released on: August 21, 2025
 */

function __awaiter(t,n,e,i){return new(e||(e=Promise))((function(s,a){function r(t){try{l(i.next(t))}catch(t){a(t)}}function o(t){try{l(i.throw(t))}catch(t){a(t)}}function l(t){var n;t.done?s(t.value):(n=t.value,n instanceof e?n:new e((function(t){t(n)}))).then(r,o)}l((i=i.apply(t,n||[])).next())}))}"function"==typeof SuppressedError&&SuppressedError;class HorizontalModule{static CollectSettings(t){return t.horizontal?Object.assign(Object.assign({},t),HorizontalModule.forceSettings):t}constructor(t){if(this.instance=t,this.initialBreakX="left",this.initialBreakY="middle",this.recalcScheduled=!1,this.settings=this.instance.settings,this.transitions=this.instance.transitions,this.events=this.instance.events,!this.settings.horizontal)return null;this.parseInitialBreak(),this.transitions.setPaneElTransform=t=>this.setPaneElTransform(t),this.events.applyMoveUpdate=()=>this.applyMoveUpdate(),this.instance.on("beforeBreakHeightApplied",(t=>{this.scheduleCalcHorizontalBreaks()})),this.instance.on("beforePresentTransition",(()=>{this.calcHorizontalBreaks(),this.overrideInitialPositioning()})),this.instance.on("onTransitionEnd",(t=>{"breakpoint"!==t.type&&"present"!==t.type||this.instance.getPanelTransformX()||this.calcHorizontalBreaks()})),this.instance.on("onDidPresent",(t=>{t.animate||this.calcHorizontalBreaks()})),this.instance.on("onDragEnd",(t=>{this.fastSwipeNext=this.events.fastSwipeNext("X")}))}parseInitialBreak(){const t=this.settings.initialBreak.split(" ");1===t.length?(this.initialBreakY=t[0],this.initialBreakX="left"):2===t.length&&(this.initialBreakY=t[0],this.initialBreakX=t[1]),["top","middle","bottom"].includes(this.initialBreakY)||(console.warn(`Cupertino Pane: Invalid Y breakpoint "${this.initialBreakY}", using "middle"`),this.initialBreakY="middle"),["left","right"].includes(this.initialBreakX)||(console.warn(`Cupertino Pane: Invalid X breakpoint "${this.initialBreakX}", using "left"`),this.initialBreakX="left")}calcHorizontalBreaks(){var t;return __awaiter(this,void 0,void 0,(function*(){const n=this.instance.paneEl.getBoundingClientRect().width,e=(window.innerWidth-n)/2;this.defaultRect={width:n,left:e,right:e+n};const i=null!==(t=this.settings.horizontalOffset)&&void 0!==t?t:0;this.horizontalBreaks={left:Math.round(-this.defaultRect.left+i),right:Math.round(window.innerWidth-this.defaultRect.left-this.defaultRect.width-i)}}))}scheduleCalcHorizontalBreaks(){this.recalcScheduled||(this.recalcScheduled=!0,requestAnimationFrame((()=>{this.recalcScheduled=!1,this.calcHorizontalBreaks()})))}overrideInitialPositioning(){const t=this.instance.breakpoints.breaks[this.initialBreakY],n=this.horizontalBreaks[this.initialBreakX];this.instance.paneEl.style.transform.includes(`${this.instance.screenHeightOffset}px`)?(this.instance.currentTranslateX=n,this.instance.currentTranslateY=this.instance.screenHeightOffset,this.instance.paneEl.style.transform=this.instance.buildTransform3d(this.instance.currentTranslateX,this.instance.currentTranslateY,0)):(this.instance.currentTranslateX=n,this.instance.currentTranslateY=t,this.instance.paneEl.style.transform=this.instance.buildTransform3d(this.instance.currentTranslateX,this.instance.currentTranslateY,0)),this.currentBreakpoint=this.initialBreakX,this.instance.breakpoints.currentBreakpoint=t}setPaneElTransform(t){this.horizontalBreaks||this.calcHorizontalBreaks();let n=t.translateY,e=t.translateX||this.instance.getPanelTransformX();"breakpoint"!==t.type||t.translateX||(e=this.horizontalBreaks[this.currentBreakpoint]),"end"===t.type&&(n=this.instance.breakpoints.getClosestBreakY(),e=this.getClosestBreakX(),this.fastSwipeNext&&("left"===this.currentBreakpoint&&this.instance.getPanelTransformX()>this.horizontalBreaks.left&&(e=this.horizontalBreaks.right),"right"===this.currentBreakpoint&&this.instance.getPanelTransformX()<this.horizontalBreaks.right&&(e=this.horizontalBreaks.left)),this.currentBreakpoint=e===this.horizontalBreaks.left?"left":"right",this.instance.breakpoints.currentBreakpoint=n),this.instance.currentTranslateX=e||0,this.instance.currentTranslateY=n||0,this.instance.paneEl.style.transform=this.instance.buildTransform3d(this.instance.currentTranslateX,this.instance.currentTranslateY,0)}getClosestBreakX(){this.horizontalBreaks||this.calcHorizontalBreaks();const t=this.instance.getPanelTransformX();return Math.abs(this.horizontalBreaks.left-t)<Math.abs(this.horizontalBreaks.right-t)?this.horizontalBreaks.left:this.horizontalBreaks.right}moveToHorizontalBreak(t){this.horizontalBreaks||this.calcHorizontalBreaks();const n=this.instance.getPanelTransformY(),e=this.horizontalBreaks[t];this.instance.currentTranslateX=e,this.instance.currentTranslateY=n,this.instance.paneEl.style.transform=this.instance.buildTransform3d(this.instance.currentTranslateX,this.instance.currentTranslateY,0),this.currentBreakpoint=t}getCurrentHorizontalBreak(){return this.currentBreakpoint}applyMoveUpdate(){const t=this.events.pendingMoveData;if(!t)return void(this.events.rafId=null);const{newVal:n,newValX:e}=t;this.instance.checkOpacityAttr(n),this.instance.checkOverflowAttr(n),this.transitions.doTransition({type:"move",translateY:n,translateX:e}),this.events.pendingMoveData=null,this.events.rafId=null}moveToWidth(t,n){return __awaiter(this,void 0,void 0,(function*(){return this.instance.isPanePresented()?(yield this.instance.transitions.doTransition({type:"breakpoint",translateX:t,translateY:n}),Promise.resolve(!0)):(console.warn("Cupertino Pane: Present pane before call moveToWidth()"),null)}))}}HorizontalModule.forceSettings={touchAngle:null};export{HorizontalModule};