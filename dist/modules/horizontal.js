/**
 * Cupertino Pane 1.4.22
 * Cupertino Panes is multi-functional modals, cards & panes with touch technologies.
 * https://panejs.com
 *
 * Copyright 2019-2025 Roman Antonov (roman-rr)
 *
 * Released under the MIT License
 *
 * Released on: August 14, 2025
 */

function __awaiter(t,i,e,n){return new(e||(e=Promise))((function(s,a){function r(t){try{l(n.next(t))}catch(t){a(t)}}function o(t){try{l(n.throw(t))}catch(t){a(t)}}function l(t){var i;t.done?s(t.value):(i=t.value,i instanceof e?i:new e((function(t){t(i)}))).then(r,o)}l((n=n.apply(t,i||[])).next())}))}"function"==typeof SuppressedError&&SuppressedError;class HorizontalModule{static CollectSettings(t){return t.horizontal?Object.assign(Object.assign({},t),HorizontalModule.forceSettings):t}constructor(t){if(this.instance=t,this.initialBreakX="left",this.initialBreakY="middle",this.settings=this.instance.settings,this.transitions=this.instance.transitions,this.events=this.instance.events,!this.settings.horizontal)return null;this.parseInitialBreak(),this.transitions.setPaneElTransform=t=>this.setPaneElTransform(t),this.instance.on("beforeBreakHeightApplied",(t=>{this.calcHorizontalBreaks()})),this.instance.on("beforePresentTransition",(()=>{this.calcHorizontalBreaks(),this.overrideInitialPositioning()})),this.instance.on("onTransitionEnd",(t=>{"breakpoint"!==t.type&&"present"!==t.type||this.instance.getPanelTransformX()||this.calcHorizontalBreaks()})),this.instance.on("onDidPresent",(t=>{t.animate||this.calcHorizontalBreaks()})),this.instance.on("onDragEnd",(t=>{this.fastSwipeNext=this.events.fastSwipeNext("X")}))}parseInitialBreak(){const t=this.settings.initialBreak.split(" ");1===t.length?(this.initialBreakY=t[0],this.initialBreakX="left"):2===t.length&&(this.initialBreakY=t[0],this.initialBreakX=t[1]),["top","middle","bottom"].includes(this.initialBreakY)||(console.warn(`Cupertino Pane: Invalid Y breakpoint "${this.initialBreakY}", using "middle"`),this.initialBreakY="middle"),["left","right"].includes(this.initialBreakX)||(console.warn(`Cupertino Pane: Invalid X breakpoint "${this.initialBreakX}", using "left"`),this.initialBreakX="left")}calcHorizontalBreaks(){return __awaiter(this,void 0,void 0,(function*(){const t=this.instance.paneEl.getBoundingClientRect().width,i=(window.innerWidth-t)/2;this.defaultRect={width:t,left:i,right:i+t},this.horizontalBreaks={left:-this.defaultRect.left+this.settings.horizontalOffset,right:window.innerWidth-this.defaultRect.left-this.defaultRect.width-this.settings.horizontalOffset}}))}overrideInitialPositioning(){const t=this.instance.breakpoints.breaks[this.initialBreakY],i=this.horizontalBreaks[this.initialBreakX],e=this.instance.paneEl.style.transform.includes(`${this.instance.screenHeightOffset}px`);this.instance.paneEl.style.transform=e?`translateX(${i}px) translateY(${this.instance.screenHeightOffset}px) translateZ(0px)`:`translateX(${i}px) translateY(${t}px) translateZ(0px)`,this.currentBreakpoint=this.initialBreakX,this.instance.breakpoints.currentBreakpoint=t}setPaneElTransform(t){let i=t.translateY,e=t.translateX||this.instance.getPanelTransformX();"breakpoint"!==t.type||t.translateX||(e=this.horizontalBreaks[this.currentBreakpoint]),"end"===t.type&&(i=this.instance.breakpoints.getClosestBreakY(),e=this.getClosestBreakX(),this.fastSwipeNext&&("left"===this.currentBreakpoint&&this.instance.getPanelTransformX()>this.horizontalBreaks.left&&(e=this.horizontalBreaks.right),"right"===this.currentBreakpoint&&this.instance.getPanelTransformX()<this.horizontalBreaks.right&&(e=this.horizontalBreaks.left)),this.currentBreakpoint=e===this.horizontalBreaks.left?"left":"right",this.instance.breakpoints.currentBreakpoint=i),this.instance.paneEl.style.transform=`translateX(${e||0}px) translateY(${i||0}px) translateZ(0px)`}getClosestBreakX(){const t=this.instance.getPanelTransformX();return Math.abs(this.horizontalBreaks.left-t)<Math.abs(this.horizontalBreaks.right-t)?this.horizontalBreaks.left:this.horizontalBreaks.right}moveToHorizontalBreak(t){this.horizontalBreaks||this.calcHorizontalBreaks();const i=this.instance.getPanelTransformY(),e=this.horizontalBreaks[t];this.instance.paneEl.style.transform=`translateX(${e}px) translateY(${i}px) translateZ(0px)`,this.currentBreakpoint=t}getCurrentHorizontalBreak(){return this.currentBreakpoint}moveToWidth(t,i){return __awaiter(this,void 0,void 0,(function*(){return this.instance.isPanePresented()?(yield this.instance.transitions.doTransition({type:"breakpoint",translateX:t,translateY:i}),Promise.resolve(!0)):(console.warn("Cupertino Pane: Present pane before call moveToWidth()"),null)}))}}HorizontalModule.forceSettings={touchAngle:null};export{HorizontalModule};